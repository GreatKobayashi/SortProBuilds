@rendermode @(new InteractiveServerRenderMode(false))
@using DefeatYourOpponent.Domain
@using DefeatYourOpponent.Domain.Entities
@using DefeatYourOpponent.Domain.Entities.Commons
@using DefeatYourOpponent.Domain.Misc
@using DefeatYourOpponent.UI.ViewModel

@foreach (var eventData in EventData)
{
    var imagePosition = ImagePostionList.First(x => x.StartX == eventData.Key.TotalSeconds);
    <div class="rounded border border-info border-2" style="position:absolute; left:@(imagePosition.StartX + TimeLineBarPadding)px; top:@(imagePosition.Y)px; display:inline-block;">
        @switch (EventType)
        {
            case EventType.PURCHASE:
                @foreach (var itemId in eventData.Value)
                {
                    <img src=@ComponentUtility.GetItemImagePath(itemId) width="@Shared.SettingEntity.ChampionImageWidth">
                }
                break;
            case EventType.KILL:
                <img src=@ComponentUtility.GetChampionImagePath(PlayerDataList.First(x => x.ParticipantId.ToString() == eventData.Value.First()).Champion) width="@Shared.SettingEntity.ChampionImageWidth">
                @foreach (var participantId in eventData.Value[1..(eventData.Value.Count - 1)])
                {
                    <img src=@ComponentUtility.GetChampionImagePath(GetChampionName(participantId)) width="@Shared.SettingEntity.AssistChampionImageWidth" style="vertical-align: bottom;">
                }
                <img src=@ComponentUtility.GetKillIconImagePath() width="@Shared.SettingEntity.KillIconWidth">
                <img src=@ComponentUtility.GetChampionImagePath(GetChampionName(eventData.Value.Last())) width="@Shared.SettingEntity.ChampionImageWidth">
                break;
        }
    </div>
}

@code {
    #pragma warning disable CS8618
    [Parameter]
    public EventType EventType { get; set; }
    [Parameter]
    public Dictionary<TimeSpan, List<string>> EventData { get; set; }
    [Parameter]
    public List<PlayerDataEntity> PlayerDataList { get; set; }
    [Parameter]
    public int TimeLineBarPadding { get; set; }
    [Parameter]
    public List<ImagePostionEntity> ImagePostionList { get; set; }
#pragma warning restore CS8618

    private string GetChampionName(string participantId)
    {
        return PlayerDataList.First(x => x.ParticipantId.ToString() == participantId).Champion;
    }
}
